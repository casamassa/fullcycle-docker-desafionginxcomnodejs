version: "3"

services:
  nginx:
    image: nginx:1.23.2-alpine
    container_name: nginx
    restart: unless-stopped
    tty: true
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    ports:
      - "8080:80"
    depends_on:
      - app
    networks:
      - node-network

  app:
    build:
      context: node
    container_name: app
    entrypoint: dockerize -wait tcp://db:3306 -timeout 20s docker-entrypoint.sh
    command: bash -c "npm install && sleep 12 && node index.js"
    networks:
      - node-network
    volumes:
      - ./node:/usr/src/app
    tty: true
    ports:
      - "3000:3000"
    depends_on:
      - db

  db:
    image: mysql:5.7
    command: --innodb-use-native-aio=0
    container_name: db
    restart: always
    tty: true
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=nodedb
      - MYSQL_ROOT_PASSWORD=root
    networks:
      - node-network

  init-db:
    image: mysql:5.7
    container_name: init-db
    command: bash -c "sleep 10 && mysql -hdb -uroot -proot nodedb < /docker-entrypoint-initdb.d/create_table.sql"
    depends_on:
      - db
    volumes:
      - ./create_table.sql:/docker-entrypoint-initdb.d/create_table.sql
    networks:
      - node-network

networks:
  node-network:
    driver: bridge
